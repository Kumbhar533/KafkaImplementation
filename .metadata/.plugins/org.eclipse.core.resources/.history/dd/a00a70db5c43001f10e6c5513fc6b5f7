package com.nilesh.kafka.producer;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class KafkaProducerApplication {

	public static void main(String[] args) {

		String s = "abpple app";

		List<Character> characters = new ArrayList<Character>();

		char[] c = s.toCharArray();

		for (char el : c) {
			if (el != ' ') {
				on.add(el);
			}
		}

		 List<Character> uniqueCharacters = characters.stream()
	                .collect(Collectors.groupingBy(Function.identity(), Collectors.counting())) // Step 1: Group and count
	                .entrySet().stream() // Convert map entries to stream
	                .filter(entry -> entry.getValue() == 1) // Step 2: Filter entries with count of 1
	                .map(Map.Entry::getKey) // Map to characters
	                .collect(Collectors.toList()); // S

		SpringApplication.run(KafkaProducerApplication.class, args);
	}

}
